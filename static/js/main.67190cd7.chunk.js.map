{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","count","num","calcNums","equal","setState","prevState","result","Number","i","length","numb","splice","String","clear","addition","prev","subtraction","multiplication","division","calcNumb","addOne","add100","increase","reset","random","Math","round","this","isFirstEmpty","isNumEmpty","className","map","item","type","onClick","disabled","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67190cd7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport './calculator.scss';\n\ntype State = {\n  count: number;\n  num: string;\n  calcNums: [] | (number | string)[]\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    count: 0,\n    num: '',\n    calcNums: [],\n  };\n\n  equal = () => {\n    this.setState((prevState) => {\n      const result = [...prevState.calcNums, Number(prevState.num)];\n\n      for (let i = 0; i < result.length; i += 1) {\n        if (result[i] === '*') {\n          const numb = (result[i - 1] as number) * (result[i + 1] as number);\n\n          result.splice(i - 1, 3, numb);\n          i = 0;\n        } else if (result[i] === '/') {\n          const numb = (result[i - 1] as number) / (result[i + 1] as number);\n\n          result.splice(i - 1, 3, numb);\n          i = 0;\n        }\n      }\n\n      for (let i = 0; i < result.length; i += 1) {\n        if (result[i] === '+') {\n          const numb = (result[i - 1] as number) + (result[i + 1] as number);\n\n          result.splice(i - 1, 3, numb);\n          i = 0;\n        } else if (result[i] === '-') {\n          const numb = (result[i - 1] as number) - (result[i + 1] as number);\n\n          result.splice(i - 1, 3, numb);\n          i = 0;\n        }\n      }\n\n      return {\n        num: String(result[0]),\n        calcNums: [],\n      };\n    });\n  };\n\n  clear = () => {\n    this.setState({ calcNums: [], num: '' });\n  };\n\n  addition = () => {\n    this.setState((prev) => ({\n      calcNums: [...prev.calcNums, Number(prev.num), '+'],\n      num: '',\n    }));\n  };\n\n  subtraction = () => {\n    this.setState((prev) => ({\n      calcNums: [...prev.calcNums, Number(prev.num), '-'],\n      num: '',\n    }));\n  };\n\n  multiplication = () => {\n    this.setState((prev) => ({\n      calcNums: [...prev.calcNums, Number(prev.num), '*'],\n      num: '',\n    }));\n  };\n\n  division = () => {\n    this.setState((prev) => ({\n      calcNums: [...prev.calcNums, Number(prev.num), '/'],\n      num: '',\n    }));\n  };\n\n  calcNumb = (numb: string) => {\n    this.setState((prev) => ({\n      num: prev.num + numb,\n    }));\n  };\n\n  addOne = () => {\n    this.setState((prev) => ({\n      count: prev.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState((prev) => ({\n      count: prev.count + 100,\n    }));\n  };\n\n  increase = () => {\n    this.addOne();\n\n    if (this.state.count % 5 === 0 && this.state.count > 0) {\n      this.add100();\n    }\n  };\n\n  reset = () => {\n    this.setState({ count: 0 });\n  };\n\n  random = () => {\n    const random = Math.round(Math.random() * 100);\n\n    this.setState((prev) => ({\n      count: prev.count + random,\n    }));\n  };\n\n  render() {\n    const {\n      count, num, calcNums,\n    } = this.state;\n    const isFirstEmpty = num.length !== 0;\n    const isNumEmpty = num.length === 0;\n\n    return (\n      <div className=\"app\">\n        <div className=\"calculator\">\n          <div className=\"calculator__display\">\n            <div className=\"calculator__numbers\">\n              {calcNums.map((item) => (\n                `${item} `\n              ))}\n              {num}\n            </div>\n          </div>\n\n          <div className=\"calculator__buttons\">\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.calcNumb('7');\n              }}\n            >\n              7\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.calcNumb('8');\n              }}\n            >\n              8\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.calcNumb('9');\n              }}\n            >\n              9\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              disabled={!isFirstEmpty}\n              onClick={() => {\n                this.division();\n              }}\n            >\n              รท\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.calcNumb('4');\n              }}\n            >\n              4\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.calcNumb('5');\n              }}\n            >\n              5\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.calcNumb('6');\n              }}\n            >\n              6\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              disabled={!isFirstEmpty}\n              onClick={() => {\n                this.multiplication();\n              }}\n            >\n              X\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.calcNumb('1');\n              }}\n            >\n              1\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.calcNumb('2');\n              }}\n            >\n              2\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.calcNumb('3');\n              }}\n            >\n              3\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              disabled={!isFirstEmpty}\n              onClick={() => {\n                this.subtraction();\n              }}\n            >\n              -\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              disabled={isNumEmpty}\n              onClick={() => {\n                this.calcNumb('0');\n              }}\n            >\n              0\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.clear();\n              }}\n            >\n              C\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.equal();\n              }}\n            >\n              =\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              disabled={!isFirstEmpty}\n              onClick={() => {\n                this.addition();\n              }}\n            >\n              +\n            </button>\n          </div>\n        </div>\n\n        <div>\n          <h1 className=\"app__numbers\">\n            Count:\n            {' '}\n            { count }\n          </h1>\n\n          <div className=\"app__buttons\">\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.addOne();\n              }}\n            >\n              +1\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.add100();\n              }}\n            >\n              +100\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.increase();\n              }}\n            >\n              Increase\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.random();\n              }}\n            >\n              Random\n            </button>\n\n            <button\n              className=\"app__button\"\n              type=\"button\"\n              onClick={() => {\n                this.reset();\n              }}\n            >\n              Reset\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}